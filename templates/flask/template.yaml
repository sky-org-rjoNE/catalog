---
apiVersion: scaffolder.backstage.io/v1beta3
# https://backstage.io/docs/features/software-catalog/descriptor-format#kind-template
kind: Template
metadata:
  name: Flask
  title: Flask
  description: Hello flask app templatee
spec:
  owner: devops
  type: service

  parameters:
    - title: Fill in some steps
      required:
        - repositoryName
        - orgnizationName
      properties:
        repositoryName:
          title: Repository Name
          type: string
          description: Name of Repository
        orgnizationName:
          title: Orgnization Name
          type: string
          description: Name of Orgnization
          enum:
          - sky-org-rjoNE
          - sky-org-dev

  steps:
    - id: fetch-base
      name: Fetch Base
      action: fetch:template
      input:
        url: ./content
        values:
          name: ${{ parameters.name }}

    - action: catalog:write
      id: create-catalog-info-file
      name: Create catalog file
      input:
        entity:
          apiVersion: backstage.io/v1alpha1
          kind: Component
          metadata:
            name: ${{ parameters.repositoryName }}
            description: Description of flask
            annotations:
              github.com/project-slug: ${{ parameters.orgnizationName + "/" + parameters.repositoryName }}
              backstage.io/techdocs-ref: dir:.
          spec:
            type: service
            owner: developers
            lifecycle: production

    - id: publish
      name: Publish
      action: publish:github
      input:
        allowedHosts: ['github.com']
        description: This is ${{ parameters.name }}
        repoUrl: ${{ "github.com?owner=" + parameters.orgnizationName + "&repo=" + parameters.repositoryName }}

    - id: register
      name: Register
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps['publish'].output.repoContentsUrl }}
        catalogInfoPath: '/catalog-info.yaml'

    - id: log-message
      name: Log Message
      action: debug:log
      input:
        message: ${{ "github.com?owner=" + parameters.orgnizationName + "&repo=" + parameters.repositoryName }}

  output:
    links:
      - title: Repository
        url: ${{ steps['publish'].output.remoteUrl }}
      - title: Open in catalog
        icon: catalog
        entityRef: ${{ steps['register'].output.entityRef }}
